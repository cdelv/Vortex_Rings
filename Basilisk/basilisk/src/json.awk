BEGIN {
    types[0] = "pstring";
    types[1] = "pint";
    types[2] = "punsigned";
    types[3] = "pbool";
    types[4] = "pfloat";
    types[5] = "pdouble";
    types[6] = "coord";
    types[7] = "pcolormap";

    format[0] = "%s";
    format[1] = "%d";
    format[2] = "%d";
    format[3] = "%d";
    format[4] = "%f";
    format[5] = "%lf";
    format[6] = "%lf";
    format[7] = "%f";
    
    ORS = ""
    
    print "// Automatically generated by json.awk\n"
    print "// DO NOT EDIT MANUALLY, edit json.awk instead\n"
}

function print1(f, args)
{
    gsub("[\"]", "\\\"", f)
    print "  i = snprintf (s, len, \"" f "\"";
    if (args != "")
	print ", " args;
    print ");\n"
    print "  s += i, len -= i, len1 += i;\n"
}

{
    if ($1 == "struct" && $3 == "{") {
	struct = $2;
	structs[struct] = struct;
	print "\nint " struct "_json (void * q, char * s, int len) {\n"
	print "  struct " struct " * p = (struct " struct " *) q;\n"
	print "  int i, len1 = 0;\n"
	type =  substr($2,2);
	print1("  \"" type "\" : {", "")
	nc = "\\n"
	while (getline && $1 != "};") {
	    type = -1;
	    pos = 2;
	    if ($2 == "*") {
		if ($1 == "char") {
		    type = 0; pos = 3;
		}
	    }
	    else if ($1 == "int")
		type = 1;
	    else if ($1 == "unsigned")
		type = 2;
	    else if ($1 == "bool")
		type = 3;
	    else if ($1 == "float")
		type = 4;
	    else if ($1 == "double")
		type = 5;
	    else if ($1 == "coord")
		type = 6;
	    else if ($1 == "colormap")
		type = 7;
	    if (type >= 0) {
		a = "";
		for (i = pos; i <= NF; i++)
		    a = a $i;
		split (a, b, ",|;");
		for (i in b)
		    if (b[i] != "" && b[i] != "expr" && substr (b[i],1,1) != "/") {
			if (gsub ("[\\[\\]]", " ", b[i])) {
			    split (b[i], c, " ");
			    tname = c[1] == "fc" || c[1] == "lc" ? "color" : types[type];
			    s = nc "    \"" c[1] "\": { \"type\": \"" tname \
				"\", \"cardinality\": " c[2] ", \"value\": [" format[type];
			    for (i = 1; i < c[2]; i++)
				s = s "," format[type];
			    s = s "] }";
			    s1 = "p->" c[1] "[0]";
			    for (i = 1; i < c[2]; i++)
				s1 = s1 ", p->" c[1] "[" i "]";
			    print1(s, s1);
			}
			else if (type == 6)
			    print1(nc "    \"" b[i] "\": { \"type\": \"" types[type] \
				   "\", \"cardinality\": 3, \"value\": [%lf,%lf,%lf] }",
				   "p->" b[i] ".x, p->" b[i] ".y, p->" b[i] ".z");
			else if (type == 7) # colormap: fixme: does nothing for the moment
			    ;
			else
			    print1(nc "    \"" b[i] "\": { \"type\": \"" types[type] \
				   "\", \"cardinality\": 1, \"value\": \"" format[type] "\" }", "p->" b[i]);
			nc = ",\\n";
		    }
	    }
	}
	print1("\\n  }");
	print "  return len1;\n}\n"
    }
}
